{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar dayjs_1 = __importDefault(require(\"dayjs\"));\n\nvar mobx_1 = require(\"mobx\");\n\nvar mobx_persist_1 = require(\"mobx-persist\");\n\nvar padZero = function padZero(n) {\n  if (n >= 10) {\n    return n;\n  }\n\n  return \"0\" + n;\n};\n\nvar WorkoutTimerStore =\n/** @class */\nfunction () {\n  function WorkoutTimerStore() {\n    this.startTime = dayjs_1.default();\n    this.isRunning = false;\n    this.seconds = 0;\n  }\n\n  WorkoutTimerStore.prototype.measure = function () {\n    var _this = this;\n\n    if (!this.isRunning) return; // dayjs creates a day obj and current time\n\n    this.seconds = dayjs_1.default().diff(this.startTime, \"second\");\n    setTimeout(function () {\n      return _this.measure();\n    }, 1000);\n  }; // action changes some of the variables or fields in store\n\n\n  WorkoutTimerStore.prototype.startTimer = function () {\n    this.isRunning = true;\n    this.startTime = dayjs_1.default();\n    this.measure();\n  };\n\n  WorkoutTimerStore.prototype.stopTimer = function () {\n    this.isRunning = false;\n    this.seconds = 0;\n  };\n\n  Object.defineProperty(WorkoutTimerStore.prototype, \"percent\", {\n    get: function get() {\n      return Math.min(100, this.seconds / 180 * 100) + \"%\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WorkoutTimerStore.prototype, \"display\", {\n    // 'get' automatically calls function without having to input () in fields\n    get: function get() {\n      var minutes = Math.floor(this.seconds / 60);\n      var seconds = this.seconds % 60;\n      return padZero(minutes) + \":\" + padZero(seconds);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  __decorate([mobx_persist_1.persist(\"object\"), mobx_1.observable], WorkoutTimerStore.prototype, \"startTime\", void 0);\n\n  __decorate([mobx_persist_1.persist, mobx_1.observable], WorkoutTimerStore.prototype, \"isRunning\", void 0);\n\n  __decorate([mobx_persist_1.persist, mobx_1.observable], WorkoutTimerStore.prototype, \"seconds\", void 0);\n\n  __decorate([mobx_1.action], WorkoutTimerStore.prototype, \"measure\", null);\n\n  __decorate([mobx_1.action], WorkoutTimerStore.prototype, \"startTimer\", null);\n\n  __decorate([mobx_1.action], WorkoutTimerStore.prototype, \"stopTimer\", null);\n\n  __decorate([mobx_1.computed], WorkoutTimerStore.prototype, \"percent\", null);\n\n  __decorate([mobx_1.computed], WorkoutTimerStore.prototype, \"display\", null);\n\n  return WorkoutTimerStore;\n}();\n\nexports.WorkoutTimerStore = WorkoutTimerStore;","map":null,"metadata":{},"sourceType":"script"}