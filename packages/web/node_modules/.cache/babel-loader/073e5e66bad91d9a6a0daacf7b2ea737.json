{"ast":null,"code":"\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar mobx_react_lite_1 = require(\"mobx-react-lite\");\n\nvar React = __importStar(require(\"react\"));\n\nvar react_native_1 = require(\"react-native\");\n\nvar RootStore_1 = require(\"../stores/RootStore\");\n\nvar Fab_1 = require(\"../ui/Fab\");\n\nvar HistoryCard_1 = require(\"../ui/HistoryCard\");\n\nvar styles = react_native_1.StyleSheet.create({\n  row: {\n    flexDirection: \"row\"\n  },\n  cardContainer: {\n    flex: 1,\n    padding: 10 // spaces out and forms cards\n\n  },\n  container: {\n    flex: 1\n  }\n});\nexports.WorkoutHistory = mobx_react_lite_1.observer(function (_a) {\n  var history = _a.history; // how to store or access router state\n\n  var rootStore = React.useContext(RootStore_1.RootStoreContext); // Array data type -> date, exercises (2D array storing objects), easier to pass into FlatList\n\n  var rows = [];\n  Object.entries(rootStore.workoutStore.history).forEach(function (_a, i) {\n    var date = _a[0],\n        exercises = _a[1];\n\n    if (i % 3 === 0) {\n      rows.push([{\n        date: date,\n        exercises: exercises\n      }]);\n    } else {\n      rows[rows.length - 1].push({\n        date: date,\n        exercises: exercises\n      });\n    }\n  });\n  return React.createElement(react_native_1.View, {\n    style: styles.container\n  }, React.createElement(react_native_1.FlatList, {\n    renderItem: function renderItem(_a) {\n      var item = _a.item;\n      return React.createElement(react_native_1.View, {\n        style: styles.row\n      }, item.map(function (_a) {\n        var date = _a.date,\n            exercises = _a.exercises;\n        return React.createElement(react_native_1.View, {\n          key: date,\n          style: styles.cardContainer\n        }, React.createElement(HistoryCard_1.HistoryCard, {\n          onPress: function onPress() {\n            var parts = date.split(\"-\");\n            history.push(\"/workout/\" + parts[0] + \"/\" + parts[1] + \"/\" + parts[2]);\n          },\n          header: date,\n          currentExercise: exercises\n        }));\n      }), item.length < 3 ? React.createElement(react_native_1.View, {\n        style: styles.cardContainer\n      }) : null, item.length < 2 ? React.createElement(react_native_1.View, {\n        style: styles.cardContainer\n      }) : null);\n    },\n    data: rows,\n    keyExtractor: function keyExtractor(item) {\n      return item.reduce(function (prev, curr) {\n        return prev + \" \" + curr.date;\n      }, \"\");\n    }\n  }), React.createElement(Fab_1.Fab, {\n    onPress: function onPress() {\n      if (!rootStore.workoutStore.hasCurrentWorkout) {\n        var _a = rootStore.workoutStore,\n            currentBarbellRow = _a.currentBarbellRow,\n            currentBenchPress = _a.currentBenchPress,\n            currentDeadlift = _a.currentDeadlift,\n            currentSquat = _a.currentSquat,\n            currentOverheadPress = _a.currentOverheadPress;\n        var emptySets = [\"\", \"\", \"\", \"\", \"\"];\n\n        if (rootStore.workoutStore.lastWorkoutType === \"b\") {\n          rootStore.workoutStore.currentExercises.push({\n            exercise: \"Squat\",\n            numSets: 5,\n            reps: 5,\n            sets: emptySets.slice(),\n            weight: currentSquat\n          }, {\n            exercise: \"Bench Press\",\n            numSets: 5,\n            reps: 5,\n            sets: emptySets.slice(),\n            weight: currentBenchPress\n          }, {\n            exercise: \"Deadlift\",\n            numSets: 1,\n            reps: 5,\n            sets: [\"\", \"x\", \"x\", \"x\", \"x\"],\n            weight: currentDeadlift\n          });\n          rootStore.workoutStore.currentSquat += 5;\n          rootStore.workoutStore.currentBenchPress += 5;\n          rootStore.workoutStore.currentDeadlift += 5;\n        } else {\n          rootStore.workoutStore.currentExercises.push({\n            exercise: \"Squat\",\n            numSets: 1,\n            reps: 5,\n            sets: [\"\", \"x\", \"x\", \"x\", \"x\"],\n            weight: currentSquat\n          }, {\n            exercise: \"Barbell Row\",\n            numSets: 5,\n            reps: 5,\n            sets: emptySets.slice(),\n            weight: currentBarbellRow\n          }, {\n            exercise: \"Overhead Press\",\n            numSets: 5,\n            reps: 5,\n            sets: emptySets.slice(),\n            weight: currentOverheadPress\n          });\n          rootStore.workoutStore.currentOverheadPress += 5;\n          rootStore.workoutStore.currentBarbellRow += 5;\n          rootStore.workoutStore.currentSquat += 5;\n        }\n\n        rootStore.workoutStore.lastWorkoutType = rootStore.workoutStore.lastWorkoutType === \"a\" ? \"b\" : \"a\";\n      }\n\n      history.push(\"/current-workout\");\n    }\n  }));\n});","map":null,"metadata":{},"sourceType":"script"}